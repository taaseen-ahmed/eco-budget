services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    ports:
      - "80:80"  # Exposing frontend on port 80
    depends_on:
      - backend  # Ensure the backend is started before frontend
    networks:
      - eco-network  # Use the same network to allow communication between services

  backend:
    container_name: backend
    build:
      context: ./eco_budget
      dockerfile: Dockerfile.backend
    ports:
      - "8080:8080"  # Expose backend on port 8080
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/eco_budget
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    env_file:
      - .env
    depends_on:
      - db  # Ensure the database is started before backend
    networks:
      - eco-network  # Connect to the same network for internal communication

  db:
    image: postgres:13  # You can adjust the version if needed
    container_name: eco_db
    environment:
      - POSTGRES_DB=eco_budget
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"  # Expose Postgres on port 5432
    volumes:
      - eco_db_data:/var/lib/postgresql/data  # Persisting database data
    networks:
      - eco-network  # Connect to the same network

networks:
  eco-network:
    driver: bridge  # Use the default bridge network for internal communication between containers

volumes:
  eco_db_data:  # Define volume for persistent database storage